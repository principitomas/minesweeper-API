/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.minesweeper.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.codegen.minesweeper.tables.Square;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SquareRecord extends UpdatableRecordImpl<SquareRecord> implements Record8<UShort, UShort, Byte, Byte, Integer, Integer, String, Byte> {

    private static final long serialVersionUID = -1842366443;

    /**
     * Setter for <code>minesweeper.square.id</code>.
     */
    public void setId(UShort value) {
        set(0, value);
    }

    /**
     * Getter for <code>minesweeper.square.id</code>.
     */
    public UShort getId() {
        return (UShort) get(0);
    }

    /**
     * Setter for <code>minesweeper.square.game_id</code>.
     */
    public void setGameId(UShort value) {
        set(1, value);
    }

    /**
     * Getter for <code>minesweeper.square.game_id</code>.
     */
    public UShort getGameId() {
        return (UShort) get(1);
    }

    /**
     * Setter for <code>minesweeper.square.revealed</code>.
     */
    public void setRevealed(Byte value) {
        set(2, value);
    }

    /**
     * Getter for <code>minesweeper.square.revealed</code>.
     */
    public Byte getRevealed() {
        return (Byte) get(2);
    }

    /**
     * Setter for <code>minesweeper.square.flag</code>.
     */
    public void setFlag(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>minesweeper.square.flag</code>.
     */
    public Byte getFlag() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>minesweeper.square.row_number</code>.
     */
    public void setRowNumber(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>minesweeper.square.row_number</code>.
     */
    public Integer getRowNumber() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>minesweeper.square.column_number</code>.
     */
    public void setColumnNumber(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>minesweeper.square.column_number</code>.
     */
    public Integer getColumnNumber() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>minesweeper.square.display_value</code>.
     */
    public void setDisplayValue(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>minesweeper.square.display_value</code>.
     */
    public String getDisplayValue() {
        return (String) get(6);
    }

    /**
     * Setter for <code>minesweeper.square.is_mine</code>.
     */
    public void setIsMine(Byte value) {
        set(7, value);
    }

    /**
     * Getter for <code>minesweeper.square.is_mine</code>.
     */
    public Byte getIsMine() {
        return (Byte) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UShort> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<UShort, UShort, Byte, Byte, Integer, Integer, String, Byte> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<UShort, UShort, Byte, Byte, Integer, Integer, String, Byte> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<UShort> field1() {
        return Square.SQUARE.ID;
    }

    @Override
    public Field<UShort> field2() {
        return Square.SQUARE.GAME_ID;
    }

    @Override
    public Field<Byte> field3() {
        return Square.SQUARE.REVEALED;
    }

    @Override
    public Field<Byte> field4() {
        return Square.SQUARE.FLAG;
    }

    @Override
    public Field<Integer> field5() {
        return Square.SQUARE.ROW_NUMBER;
    }

    @Override
    public Field<Integer> field6() {
        return Square.SQUARE.COLUMN_NUMBER;
    }

    @Override
    public Field<String> field7() {
        return Square.SQUARE.DISPLAY_VALUE;
    }

    @Override
    public Field<Byte> field8() {
        return Square.SQUARE.IS_MINE;
    }

    @Override
    public UShort component1() {
        return getId();
    }

    @Override
    public UShort component2() {
        return getGameId();
    }

    @Override
    public Byte component3() {
        return getRevealed();
    }

    @Override
    public Byte component4() {
        return getFlag();
    }

    @Override
    public Integer component5() {
        return getRowNumber();
    }

    @Override
    public Integer component6() {
        return getColumnNumber();
    }

    @Override
    public String component7() {
        return getDisplayValue();
    }

    @Override
    public Byte component8() {
        return getIsMine();
    }

    @Override
    public UShort value1() {
        return getId();
    }

    @Override
    public UShort value2() {
        return getGameId();
    }

    @Override
    public Byte value3() {
        return getRevealed();
    }

    @Override
    public Byte value4() {
        return getFlag();
    }

    @Override
    public Integer value5() {
        return getRowNumber();
    }

    @Override
    public Integer value6() {
        return getColumnNumber();
    }

    @Override
    public String value7() {
        return getDisplayValue();
    }

    @Override
    public Byte value8() {
        return getIsMine();
    }

    @Override
    public SquareRecord value1(UShort value) {
        setId(value);
        return this;
    }

    @Override
    public SquareRecord value2(UShort value) {
        setGameId(value);
        return this;
    }

    @Override
    public SquareRecord value3(Byte value) {
        setRevealed(value);
        return this;
    }

    @Override
    public SquareRecord value4(Byte value) {
        setFlag(value);
        return this;
    }

    @Override
    public SquareRecord value5(Integer value) {
        setRowNumber(value);
        return this;
    }

    @Override
    public SquareRecord value6(Integer value) {
        setColumnNumber(value);
        return this;
    }

    @Override
    public SquareRecord value7(String value) {
        setDisplayValue(value);
        return this;
    }

    @Override
    public SquareRecord value8(Byte value) {
        setIsMine(value);
        return this;
    }

    @Override
    public SquareRecord values(UShort value1, UShort value2, Byte value3, Byte value4, Integer value5, Integer value6, String value7, Byte value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SquareRecord
     */
    public SquareRecord() {
        super(Square.SQUARE);
    }

    /**
     * Create a detached, initialised SquareRecord
     */
    public SquareRecord(UShort id, UShort gameId, Byte revealed, Byte flag, Integer rowNumber, Integer columnNumber, String displayValue, Byte isMine) {
        super(Square.SQUARE);

        set(0, id);
        set(1, gameId);
        set(2, revealed);
        set(3, flag);
        set(4, rowNumber);
        set(5, columnNumber);
        set(6, displayValue);
        set(7, isMine);
    }
}
