/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.minesweeper;


import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.codegen.minesweeper.tables.Game;
import org.jooq.codegen.minesweeper.tables.Square;
import org.jooq.codegen.minesweeper.tables.UserAccount;
import org.jooq.codegen.minesweeper.tables.records.GameRecord;
import org.jooq.codegen.minesweeper.tables.records.SquareRecord;
import org.jooq.codegen.minesweeper.tables.records.UserAccountRecord;
import org.jooq.impl.Internal;
import org.jooq.types.UShort;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>minesweeper</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<GameRecord, UShort> IDENTITY_GAME = Identities0.IDENTITY_GAME;
    public static final Identity<SquareRecord, UShort> IDENTITY_SQUARE = Identities0.IDENTITY_SQUARE;
    public static final Identity<UserAccountRecord, UShort> IDENTITY_USER_ACCOUNT = Identities0.IDENTITY_USER_ACCOUNT;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<GameRecord> KEY_GAME_PRIMARY = UniqueKeys0.KEY_GAME_PRIMARY;
    public static final UniqueKey<SquareRecord> KEY_SQUARE_PRIMARY = UniqueKeys0.KEY_SQUARE_PRIMARY;
    public static final UniqueKey<UserAccountRecord> KEY_USER_ACCOUNT_PRIMARY = UniqueKeys0.KEY_USER_ACCOUNT_PRIMARY;
    public static final UniqueKey<UserAccountRecord> KEY_USER_ACCOUNT_EMAIL = UniqueKeys0.KEY_USER_ACCOUNT_EMAIL;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<GameRecord, UserAccountRecord> FK_USER_ACCOUNT_ID = ForeignKeys0.FK_USER_ACCOUNT_ID;
    public static final ForeignKey<SquareRecord, GameRecord> FK_GAME_GAME_ID = ForeignKeys0.FK_GAME_GAME_ID;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<GameRecord, UShort> IDENTITY_GAME = Internal.createIdentity(Game.GAME, Game.GAME.ID);
        public static Identity<SquareRecord, UShort> IDENTITY_SQUARE = Internal.createIdentity(Square.SQUARE, Square.SQUARE.ID);
        public static Identity<UserAccountRecord, UShort> IDENTITY_USER_ACCOUNT = Internal.createIdentity(UserAccount.USER_ACCOUNT, UserAccount.USER_ACCOUNT.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<GameRecord> KEY_GAME_PRIMARY = Internal.createUniqueKey(Game.GAME, "KEY_game_PRIMARY", new TableField[] { Game.GAME.ID }, true);
        public static final UniqueKey<SquareRecord> KEY_SQUARE_PRIMARY = Internal.createUniqueKey(Square.SQUARE, "KEY_square_PRIMARY", new TableField[] { Square.SQUARE.ID }, true);
        public static final UniqueKey<UserAccountRecord> KEY_USER_ACCOUNT_PRIMARY = Internal.createUniqueKey(UserAccount.USER_ACCOUNT, "KEY_user_account_PRIMARY", new TableField[] { UserAccount.USER_ACCOUNT.ID }, true);
        public static final UniqueKey<UserAccountRecord> KEY_USER_ACCOUNT_EMAIL = Internal.createUniqueKey(UserAccount.USER_ACCOUNT, "KEY_user_account_email", new TableField[] { UserAccount.USER_ACCOUNT.EMAIL }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<GameRecord, UserAccountRecord> FK_USER_ACCOUNT_ID = Internal.createForeignKey(Keys.KEY_USER_ACCOUNT_PRIMARY, Game.GAME, "fk_user_account_id", new TableField[] { Game.GAME.USER_ACCOUNT_ID }, true);
        public static final ForeignKey<SquareRecord, GameRecord> FK_GAME_GAME_ID = Internal.createForeignKey(Keys.KEY_GAME_PRIMARY, Square.SQUARE, "fk_game_game_id", new TableField[] { Square.SQUARE.GAME_ID }, true);
    }
}
